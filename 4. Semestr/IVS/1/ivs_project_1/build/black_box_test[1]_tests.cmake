add_test( EmptyTree.InsertNode_SingleElement /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=EmptyTree.InsertNode_SingleElement]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.InsertNode_SingleElement PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( EmptyTree.DeleteNode_NonExistentElement /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=EmptyTree.DeleteNode_NonExistentElement]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.DeleteNode_NonExistentElement PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( EmptyTree.FindNode_NonExistentElement /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=EmptyTree.FindNode_NonExistentElement]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.FindNode_NonExistentElement PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.InsertNode_MultipleElements /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=NonEmptyTree.InsertNode_MultipleElements]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.InsertNode_MultipleElements PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.DeleteNode_ExistingElement /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=NonEmptyTree.DeleteNode_ExistingElement]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.DeleteNode_ExistingElement PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.FindNode_ExistingElement /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=NonEmptyTree.FindNode_ExistingElement]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.FindNode_ExistingElement PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom1_AllLeavesAreBlack /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom1_AllLeavesAreBlack]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom1_AllLeavesAreBlack PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom2_RedNodeHasBlackChildren /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom2_RedNodeHasBlackChildren]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom2_RedNodeHasBlackChildren PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom3_BlackHeightIsConsistent /home/hanka/Plocha/ivs_project_1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom3_BlackHeightIsConsistent]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom3_BlackHeightIsConsistent PROPERTIES WORKING_DIRECTORY /home/hanka/Plocha/ivs_project_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set( black_box_test_TESTS EmptyTree.InsertNode_SingleElement EmptyTree.DeleteNode_NonExistentElement EmptyTree.FindNode_NonExistentElement NonEmptyTree.InsertNode_MultipleElements NonEmptyTree.DeleteNode_ExistingElement NonEmptyTree.FindNode_ExistingElement TreeAxioms.Axiom1_AllLeavesAreBlack TreeAxioms.Axiom2_RedNodeHasBlackChildren TreeAxioms.Axiom3_BlackHeightIsConsistent)
